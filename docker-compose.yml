# docker para orquestar las 3 capas de la aplicación PartsUnlimitedMRP
version: "3"

services:
  # ahora se indican los servicios por el orden en que se quiere que se inicien.
  #Por ejemplo, mongo debe estar antes de order.
  #mongo: mismo nombre usado en el run.sh de Order y application.properties. #Se resuelve en una dirección IP.
  mongo:
    image: simina/p2gps:db
    deploy:
      replicas: 1 # para escabilidad del servicio.
      resources:
        limits:
          cpus: "0.15"
          memory: 200M
      restart_policy:
        condition: on-failure #reinicar el contenedor si falla
    ports:
      - "28017:28017" # mapeo el Puerto del contenedor (derecha) con el puerto del host del servicio
      - "27017:27017"
    volumes:
      - "db-data:/data/db" # para dar persistencia a la sesión

  order:
    image: simina/p2gps:order
    depends_on:
      - "mongo" #le pasamos al servicio order la IP del servicio mongo
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.3"
          memory: 500M
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"

  web:
    image: simina/p2gps:web
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.25"
          memory: 300M
      restart_policy:
        condition: on-failure
    ports:
      - "80:8080"

volumes:
  db-data: